package ladder.dao.model;

import java.util.ArrayList;
import java.util.List;

public class StatisticalListExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table statistical_list
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table statistical_list
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table statistical_list
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table statistical_list
     *
     * @mbg.generated
     */
    public StatisticalListExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table statistical_list
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table statistical_list
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table statistical_list
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table statistical_list
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table statistical_list
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table statistical_list
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table statistical_list
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table statistical_list
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table statistical_list
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table statistical_list
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table statistical_list
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andUsernameIsNull() {
            addCriterion("username is null");
            return (Criteria) this;
        }

        public Criteria andUsernameIsNotNull() {
            addCriterion("username is not null");
            return (Criteria) this;
        }

        public Criteria andUsernameEqualTo(String value) {
            addCriterion("username =", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotEqualTo(String value) {
            addCriterion("username <>", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameGreaterThan(String value) {
            addCriterion("username >", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameGreaterThanOrEqualTo(String value) {
            addCriterion("username >=", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameLessThan(String value) {
            addCriterion("username <", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameLessThanOrEqualTo(String value) {
            addCriterion("username <=", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameLike(String value) {
            addCriterion("username like", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotLike(String value) {
            addCriterion("username not like", value, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameIn(List<String> values) {
            addCriterion("username in", values, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotIn(List<String> values) {
            addCriterion("username not in", values, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameBetween(String value1, String value2) {
            addCriterion("username between", value1, value2, "username");
            return (Criteria) this;
        }

        public Criteria andUsernameNotBetween(String value1, String value2) {
            addCriterion("username not between", value1, value2, "username");
            return (Criteria) this;
        }

        public Criteria andSeasonIsNull() {
            addCriterion("season is null");
            return (Criteria) this;
        }

        public Criteria andSeasonIsNotNull() {
            addCriterion("season is not null");
            return (Criteria) this;
        }

        public Criteria andSeasonEqualTo(Integer value) {
            addCriterion("season =", value, "season");
            return (Criteria) this;
        }

        public Criteria andSeasonNotEqualTo(Integer value) {
            addCriterion("season <>", value, "season");
            return (Criteria) this;
        }

        public Criteria andSeasonGreaterThan(Integer value) {
            addCriterion("season >", value, "season");
            return (Criteria) this;
        }

        public Criteria andSeasonGreaterThanOrEqualTo(Integer value) {
            addCriterion("season >=", value, "season");
            return (Criteria) this;
        }

        public Criteria andSeasonLessThan(Integer value) {
            addCriterion("season <", value, "season");
            return (Criteria) this;
        }

        public Criteria andSeasonLessThanOrEqualTo(Integer value) {
            addCriterion("season <=", value, "season");
            return (Criteria) this;
        }

        public Criteria andSeasonIn(List<Integer> values) {
            addCriterion("season in", values, "season");
            return (Criteria) this;
        }

        public Criteria andSeasonNotIn(List<Integer> values) {
            addCriterion("season not in", values, "season");
            return (Criteria) this;
        }

        public Criteria andSeasonBetween(Integer value1, Integer value2) {
            addCriterion("season between", value1, value2, "season");
            return (Criteria) this;
        }

        public Criteria andSeasonNotBetween(Integer value1, Integer value2) {
            addCriterion("season not between", value1, value2, "season");
            return (Criteria) this;
        }

        public Criteria andBotNameIsNull() {
            addCriterion("bot_name is null");
            return (Criteria) this;
        }

        public Criteria andBotNameIsNotNull() {
            addCriterion("bot_name is not null");
            return (Criteria) this;
        }

        public Criteria andBotNameEqualTo(String value) {
            addCriterion("bot_name =", value, "botName");
            return (Criteria) this;
        }

        public Criteria andBotNameNotEqualTo(String value) {
            addCriterion("bot_name <>", value, "botName");
            return (Criteria) this;
        }

        public Criteria andBotNameGreaterThan(String value) {
            addCriterion("bot_name >", value, "botName");
            return (Criteria) this;
        }

        public Criteria andBotNameGreaterThanOrEqualTo(String value) {
            addCriterion("bot_name >=", value, "botName");
            return (Criteria) this;
        }

        public Criteria andBotNameLessThan(String value) {
            addCriterion("bot_name <", value, "botName");
            return (Criteria) this;
        }

        public Criteria andBotNameLessThanOrEqualTo(String value) {
            addCriterion("bot_name <=", value, "botName");
            return (Criteria) this;
        }

        public Criteria andBotNameLike(String value) {
            addCriterion("bot_name like", value, "botName");
            return (Criteria) this;
        }

        public Criteria andBotNameNotLike(String value) {
            addCriterion("bot_name not like", value, "botName");
            return (Criteria) this;
        }

        public Criteria andBotNameIn(List<String> values) {
            addCriterion("bot_name in", values, "botName");
            return (Criteria) this;
        }

        public Criteria andBotNameNotIn(List<String> values) {
            addCriterion("bot_name not in", values, "botName");
            return (Criteria) this;
        }

        public Criteria andBotNameBetween(String value1, String value2) {
            addCriterion("bot_name between", value1, value2, "botName");
            return (Criteria) this;
        }

        public Criteria andBotNameNotBetween(String value1, String value2) {
            addCriterion("bot_name not between", value1, value2, "botName");
            return (Criteria) this;
        }

        public Criteria andMatchesIsNull() {
            addCriterion("matches is null");
            return (Criteria) this;
        }

        public Criteria andMatchesIsNotNull() {
            addCriterion("matches is not null");
            return (Criteria) this;
        }

        public Criteria andMatchesEqualTo(Integer value) {
            addCriterion("matches =", value, "matches");
            return (Criteria) this;
        }

        public Criteria andMatchesNotEqualTo(Integer value) {
            addCriterion("matches <>", value, "matches");
            return (Criteria) this;
        }

        public Criteria andMatchesGreaterThan(Integer value) {
            addCriterion("matches >", value, "matches");
            return (Criteria) this;
        }

        public Criteria andMatchesGreaterThanOrEqualTo(Integer value) {
            addCriterion("matches >=", value, "matches");
            return (Criteria) this;
        }

        public Criteria andMatchesLessThan(Integer value) {
            addCriterion("matches <", value, "matches");
            return (Criteria) this;
        }

        public Criteria andMatchesLessThanOrEqualTo(Integer value) {
            addCriterion("matches <=", value, "matches");
            return (Criteria) this;
        }

        public Criteria andMatchesIn(List<Integer> values) {
            addCriterion("matches in", values, "matches");
            return (Criteria) this;
        }

        public Criteria andMatchesNotIn(List<Integer> values) {
            addCriterion("matches not in", values, "matches");
            return (Criteria) this;
        }

        public Criteria andMatchesBetween(Integer value1, Integer value2) {
            addCriterion("matches between", value1, value2, "matches");
            return (Criteria) this;
        }

        public Criteria andMatchesNotBetween(Integer value1, Integer value2) {
            addCriterion("matches not between", value1, value2, "matches");
            return (Criteria) this;
        }

        public Criteria andWinsIsNull() {
            addCriterion("wins is null");
            return (Criteria) this;
        }

        public Criteria andWinsIsNotNull() {
            addCriterion("wins is not null");
            return (Criteria) this;
        }

        public Criteria andWinsEqualTo(Integer value) {
            addCriterion("wins =", value, "wins");
            return (Criteria) this;
        }

        public Criteria andWinsNotEqualTo(Integer value) {
            addCriterion("wins <>", value, "wins");
            return (Criteria) this;
        }

        public Criteria andWinsGreaterThan(Integer value) {
            addCriterion("wins >", value, "wins");
            return (Criteria) this;
        }

        public Criteria andWinsGreaterThanOrEqualTo(Integer value) {
            addCriterion("wins >=", value, "wins");
            return (Criteria) this;
        }

        public Criteria andWinsLessThan(Integer value) {
            addCriterion("wins <", value, "wins");
            return (Criteria) this;
        }

        public Criteria andWinsLessThanOrEqualTo(Integer value) {
            addCriterion("wins <=", value, "wins");
            return (Criteria) this;
        }

        public Criteria andWinsIn(List<Integer> values) {
            addCriterion("wins in", values, "wins");
            return (Criteria) this;
        }

        public Criteria andWinsNotIn(List<Integer> values) {
            addCriterion("wins not in", values, "wins");
            return (Criteria) this;
        }

        public Criteria andWinsBetween(Integer value1, Integer value2) {
            addCriterion("wins between", value1, value2, "wins");
            return (Criteria) this;
        }

        public Criteria andWinsNotBetween(Integer value1, Integer value2) {
            addCriterion("wins not between", value1, value2, "wins");
            return (Criteria) this;
        }

        public Criteria andWinRateIsNull() {
            addCriterion("win_rate is null");
            return (Criteria) this;
        }

        public Criteria andWinRateIsNotNull() {
            addCriterion("win_rate is not null");
            return (Criteria) this;
        }

        public Criteria andWinRateEqualTo(Float value) {
            addCriterion("win_rate =", value, "winRate");
            return (Criteria) this;
        }

        public Criteria andWinRateNotEqualTo(Float value) {
            addCriterion("win_rate <>", value, "winRate");
            return (Criteria) this;
        }

        public Criteria andWinRateGreaterThan(Float value) {
            addCriterion("win_rate >", value, "winRate");
            return (Criteria) this;
        }

        public Criteria andWinRateGreaterThanOrEqualTo(Float value) {
            addCriterion("win_rate >=", value, "winRate");
            return (Criteria) this;
        }

        public Criteria andWinRateLessThan(Float value) {
            addCriterion("win_rate <", value, "winRate");
            return (Criteria) this;
        }

        public Criteria andWinRateLessThanOrEqualTo(Float value) {
            addCriterion("win_rate <=", value, "winRate");
            return (Criteria) this;
        }

        public Criteria andWinRateIn(List<Float> values) {
            addCriterion("win_rate in", values, "winRate");
            return (Criteria) this;
        }

        public Criteria andWinRateNotIn(List<Float> values) {
            addCriterion("win_rate not in", values, "winRate");
            return (Criteria) this;
        }

        public Criteria andWinRateBetween(Float value1, Float value2) {
            addCriterion("win_rate between", value1, value2, "winRate");
            return (Criteria) this;
        }

        public Criteria andWinRateNotBetween(Float value1, Float value2) {
            addCriterion("win_rate not between", value1, value2, "winRate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table statistical_list
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table statistical_list
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}