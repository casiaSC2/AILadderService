package ladder.dao.model;

import java.util.ArrayList;
import java.util.List;

public class MatchResultExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table match_result
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table match_result
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table match_result
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table match_result
     *
     * @mbg.generated
     */
    public MatchResultExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table match_result
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table match_result
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table match_result
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table match_result
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table match_result
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table match_result
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table match_result
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table match_result
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table match_result
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table match_result
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table match_result
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andBotNameAIsNull() {
            addCriterion("bot_name_A is null");
            return (Criteria) this;
        }

        public Criteria andBotNameAIsNotNull() {
            addCriterion("bot_name_A is not null");
            return (Criteria) this;
        }

        public Criteria andBotNameAEqualTo(String value) {
            addCriterion("bot_name_A =", value, "botNameA");
            return (Criteria) this;
        }

        public Criteria andBotNameANotEqualTo(String value) {
            addCriterion("bot_name_A <>", value, "botNameA");
            return (Criteria) this;
        }

        public Criteria andBotNameAGreaterThan(String value) {
            addCriterion("bot_name_A >", value, "botNameA");
            return (Criteria) this;
        }

        public Criteria andBotNameAGreaterThanOrEqualTo(String value) {
            addCriterion("bot_name_A >=", value, "botNameA");
            return (Criteria) this;
        }

        public Criteria andBotNameALessThan(String value) {
            addCriterion("bot_name_A <", value, "botNameA");
            return (Criteria) this;
        }

        public Criteria andBotNameALessThanOrEqualTo(String value) {
            addCriterion("bot_name_A <=", value, "botNameA");
            return (Criteria) this;
        }

        public Criteria andBotNameALike(String value) {
            addCriterion("bot_name_A like", value, "botNameA");
            return (Criteria) this;
        }

        public Criteria andBotNameANotLike(String value) {
            addCriterion("bot_name_A not like", value, "botNameA");
            return (Criteria) this;
        }

        public Criteria andBotNameAIn(List<String> values) {
            addCriterion("bot_name_A in", values, "botNameA");
            return (Criteria) this;
        }

        public Criteria andBotNameANotIn(List<String> values) {
            addCriterion("bot_name_A not in", values, "botNameA");
            return (Criteria) this;
        }

        public Criteria andBotNameABetween(String value1, String value2) {
            addCriterion("bot_name_A between", value1, value2, "botNameA");
            return (Criteria) this;
        }

        public Criteria andBotNameANotBetween(String value1, String value2) {
            addCriterion("bot_name_A not between", value1, value2, "botNameA");
            return (Criteria) this;
        }

        public Criteria andBotNameBIsNull() {
            addCriterion("bot_name_B is null");
            return (Criteria) this;
        }

        public Criteria andBotNameBIsNotNull() {
            addCriterion("bot_name_B is not null");
            return (Criteria) this;
        }

        public Criteria andBotNameBEqualTo(String value) {
            addCriterion("bot_name_B =", value, "botNameB");
            return (Criteria) this;
        }

        public Criteria andBotNameBNotEqualTo(String value) {
            addCriterion("bot_name_B <>", value, "botNameB");
            return (Criteria) this;
        }

        public Criteria andBotNameBGreaterThan(String value) {
            addCriterion("bot_name_B >", value, "botNameB");
            return (Criteria) this;
        }

        public Criteria andBotNameBGreaterThanOrEqualTo(String value) {
            addCriterion("bot_name_B >=", value, "botNameB");
            return (Criteria) this;
        }

        public Criteria andBotNameBLessThan(String value) {
            addCriterion("bot_name_B <", value, "botNameB");
            return (Criteria) this;
        }

        public Criteria andBotNameBLessThanOrEqualTo(String value) {
            addCriterion("bot_name_B <=", value, "botNameB");
            return (Criteria) this;
        }

        public Criteria andBotNameBLike(String value) {
            addCriterion("bot_name_B like", value, "botNameB");
            return (Criteria) this;
        }

        public Criteria andBotNameBNotLike(String value) {
            addCriterion("bot_name_B not like", value, "botNameB");
            return (Criteria) this;
        }

        public Criteria andBotNameBIn(List<String> values) {
            addCriterion("bot_name_B in", values, "botNameB");
            return (Criteria) this;
        }

        public Criteria andBotNameBNotIn(List<String> values) {
            addCriterion("bot_name_B not in", values, "botNameB");
            return (Criteria) this;
        }

        public Criteria andBotNameBBetween(String value1, String value2) {
            addCriterion("bot_name_B between", value1, value2, "botNameB");
            return (Criteria) this;
        }

        public Criteria andBotNameBNotBetween(String value1, String value2) {
            addCriterion("bot_name_B not between", value1, value2, "botNameB");
            return (Criteria) this;
        }

        public Criteria andWinIsNull() {
            addCriterion("win is null");
            return (Criteria) this;
        }

        public Criteria andWinIsNotNull() {
            addCriterion("win is not null");
            return (Criteria) this;
        }

        public Criteria andWinEqualTo(Integer value) {
            addCriterion("win =", value, "win");
            return (Criteria) this;
        }

        public Criteria andWinNotEqualTo(Integer value) {
            addCriterion("win <>", value, "win");
            return (Criteria) this;
        }

        public Criteria andWinGreaterThan(Integer value) {
            addCriterion("win >", value, "win");
            return (Criteria) this;
        }

        public Criteria andWinGreaterThanOrEqualTo(Integer value) {
            addCriterion("win >=", value, "win");
            return (Criteria) this;
        }

        public Criteria andWinLessThan(Integer value) {
            addCriterion("win <", value, "win");
            return (Criteria) this;
        }

        public Criteria andWinLessThanOrEqualTo(Integer value) {
            addCriterion("win <=", value, "win");
            return (Criteria) this;
        }

        public Criteria andWinIn(List<Integer> values) {
            addCriterion("win in", values, "win");
            return (Criteria) this;
        }

        public Criteria andWinNotIn(List<Integer> values) {
            addCriterion("win not in", values, "win");
            return (Criteria) this;
        }

        public Criteria andWinBetween(Integer value1, Integer value2) {
            addCriterion("win between", value1, value2, "win");
            return (Criteria) this;
        }

        public Criteria andWinNotBetween(Integer value1, Integer value2) {
            addCriterion("win not between", value1, value2, "win");
            return (Criteria) this;
        }

        public Criteria andReplayPathIsNull() {
            addCriterion("replay_path is null");
            return (Criteria) this;
        }

        public Criteria andReplayPathIsNotNull() {
            addCriterion("replay_path is not null");
            return (Criteria) this;
        }

        public Criteria andReplayPathEqualTo(String value) {
            addCriterion("replay_path =", value, "replayPath");
            return (Criteria) this;
        }

        public Criteria andReplayPathNotEqualTo(String value) {
            addCriterion("replay_path <>", value, "replayPath");
            return (Criteria) this;
        }

        public Criteria andReplayPathGreaterThan(String value) {
            addCriterion("replay_path >", value, "replayPath");
            return (Criteria) this;
        }

        public Criteria andReplayPathGreaterThanOrEqualTo(String value) {
            addCriterion("replay_path >=", value, "replayPath");
            return (Criteria) this;
        }

        public Criteria andReplayPathLessThan(String value) {
            addCriterion("replay_path <", value, "replayPath");
            return (Criteria) this;
        }

        public Criteria andReplayPathLessThanOrEqualTo(String value) {
            addCriterion("replay_path <=", value, "replayPath");
            return (Criteria) this;
        }

        public Criteria andReplayPathLike(String value) {
            addCriterion("replay_path like", value, "replayPath");
            return (Criteria) this;
        }

        public Criteria andReplayPathNotLike(String value) {
            addCriterion("replay_path not like", value, "replayPath");
            return (Criteria) this;
        }

        public Criteria andReplayPathIn(List<String> values) {
            addCriterion("replay_path in", values, "replayPath");
            return (Criteria) this;
        }

        public Criteria andReplayPathNotIn(List<String> values) {
            addCriterion("replay_path not in", values, "replayPath");
            return (Criteria) this;
        }

        public Criteria andReplayPathBetween(String value1, String value2) {
            addCriterion("replay_path between", value1, value2, "replayPath");
            return (Criteria) this;
        }

        public Criteria andReplayPathNotBetween(String value1, String value2) {
            addCriterion("replay_path not between", value1, value2, "replayPath");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table match_result
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table match_result
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}